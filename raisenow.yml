# The format of this file is YAML, here is a brief overview:
#
#   https://de.wikipedia.org/wiki/YAML
#
# The generated pages will be available here
#
#   https://www.bos-schweiz.ch/raisenow-forms/index.html
#
# Processing changes takes (at time of writing) approx. 20 seconds.
#
# Some docu can be found here
#
#   https://support.raisenow.com/hc/de/articles/360011968358-Anpassen-der-Konfiguration-Sprache-und-Bedingungen
#
debugging: &DEBUGGING
  debug: true
  # debugErrorMessages: true
  # debugSlots: true
  # debugStyles: true
  # testMode: true

tamaro:

  # ------------------------------ Teil I - Spenden

  rnwSpendeAllgemein: &BLUEPRINT_SPENDE
    << : *DEBUGGING
    language: de
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - if: showPaymentAddress() == true
        then: [ payment_address ]
    purposes: [ s1, s2, s3, s4, s5, s6 ]
    salutations:
      - Frau
      - Herr
      - Divers
    translations: &TRANSLATIONS_SPENDE
      de:
        purposes:
          s1: Allgemein
          s2: Bäume spenden
          s3: Rettungsstationen
          s4: Auswilderungen
          s5: Bären
          s6: Waldschutz
        # payment_form:
        #   stored_customer_form_of_address: Anrede
        #   stored_customer_form_of_address_options:
        #     female: Frau
        #     male: Herr
        #     other: Divers
    showStoredCustomerBirthdate: true
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [20] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [10] }
      - { if: 'paymentType() == recurring and recurringInterval() == quaterly', then: [30] }
      - { if: 'paymentType() == recurring and recurringInterval() == semestral', then: [60] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [120] }

    # paymentFormPrefill:
    #   stored_customer_form_of_address: null
    # slots:
    #   profile_form_1:
    #     component: field
    #     type: radio-group
    #     name: stored_customer_form_of_address
    #     label: payment_form.stored_customer_form_of_address
    #     children:
    #       - component: field
    #         type: radio-in-group
    #         name: stored_customer_form_of_address
    #         text: payment_form.stored_customer_form_of_address_options.female
    #         value: female
    #       - component: field
    #         type: radio-in-group
    #         name: stored_customer_form_of_address
    #         text: payment_form.stored_customer_form_of_address_options.male
    #         value: male
    #       - component: field
    #         type: radio-in-group
    #         name: stored_customer_form_of_address
    #         text: payment_form.stored_customer_form_of_address_options.other
    #         value: other
    #   profile_form_6:
    #     # - component: paragraph
    #     #   html: HTML1
    #     #   inner_html: INNER_HTML1
    #     #   content: CONTENT1
    #     #   text: TEXT1
    #     #   text_html: TEXT_HTML1
    #     # - component: text
    #     #   html: HTML2
    #     #   inner_html: INNER_HTML2
    #     #   content: CONTENT2
    #     #   text: TEXT2
    #     #   text_html: TEXT_HTML2
    #     # - component: section
    #     #   html: HTML3
    #     #   inner_html: INNER_HTML3
    #     #   content: CONTENT3
    #     #   text: TEXT3
    #     #   text_html: TEXT_HTML3
    #     # - component: p
    #     #   html: HTML4
    #     #   inner_html: INNER_HTML4
    #     #   content: CONTENT4
    #     #   text: TEXT4
    #     #   text_html: TEXT_HTML4
    #     # - component: div
    #     #   html: HTML5
    #     #   inner_html: INNER_HTML5
    #     #   content: CONTENT5
    #     #   text: TEXT5
    #     #   text_html: TEXT_HTML5
    #   #profileForm6: camelCase
    #   #profile_form_7: <b>bold</b>
    #   #profileForm7: <i>italics</i>

  rnwSpendeBaeume:
    << : *BLUEPRINT_SPENDE
    purposes: [ s2 ]
    amounts:
      - if: paymentType() == onetime
        then:
          - 7.65
          - 38.25
          - 76.50
          - 765.00
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [7.65] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [10] }
      - { if: 'paymentType() == recurring and recurringInterval() == quaterly', then: [30] }
      - { if: 'paymentType() == recurring and recurringInterval() == semestral', then: [60] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [120] }
    translations:
      << : *TRANSLATIONS_SPENDE
      de:
        amount_descriptions:
          - { if: 'amount() == 7.65', then: [ einen Baum spenden ] }
          - { if: 'amount() == 38.25', then: [ fünf Bäume spenden ] }
          - { if: 'amount() == 76.5', then: [ zehn Bäume spenden ] }
          - { if: 'amount() == 765', then: [ hundert Bäume spenden ] }

  rnwSpendeRettungsstationen:
    << : *BLUEPRINT_SPENDE
    purposes: [ s3 ]

  rnwSpendeAuswilderungen:
    << : *BLUEPRINT_SPENDE
    purposes: [ s4 ]

  rnwSpendeBaeren:
    << : *BLUEPRINT_SPENDE
    purposes: [ s5 ]

  rnwSpendeWaldschutz:
    << : *BLUEPRINT_SPENDE
    purposes: [ s6 ]

  # ------------------------------ Teil II - Patenschaften

  rnwPatenschaftAllgemein: &BLUEPRINT_PATENSCHAFT
    << : *BLUEPRINT_SPENDE
    purposes: [ p1, p2, p3, p4, p5, p6 ]
    recurringIntervals:
      - monthly
      - yearly
    amounts:
      - { if: 'paymentType() == onetime', then: [300, 180] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25, 15] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300, 180] }
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [300, 180] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25, 15] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300, 180] }
    translations:
      de:
        purposes:
          p1: Patenschaft für die Rettungsstationen
          p2: Patenschaft für Topan
          p3: Patenschaft für Bumi
          p4: Patenschaft für Davi
          p5: Patenschaft für Kopral
          p6: Patenschaft für Shelton
        amount_descriptions:
          - if: 'paymentType() == recurring and recurringInterval() == monthly and amount() == 25'
            then: [ Normalpreis ]
          - if: 'amount() == 300'
            then: [ Normalpreis ]
          - if: 'amount() == custom_amount'
            then: [ '' ]
          - Ermässigt für Kinder

  rnwPatenschaftRettungsstationen:
    << : *BLUEPRINT_PATENSCHAFT
    purposes: [ p1 ]

  rnwPatenschaftTopan:
    << : *BLUEPRINT_PATENSCHAFT
    purposes: [ p2 ]

  rnwPatenschaftBumi:
    << : *BLUEPRINT_PATENSCHAFT
    purposes: [ p3 ]

  rnwPatenschaftDavi:
    << : *BLUEPRINT_PATENSCHAFT
    purposes: [ p4 ]

  rnwPatenschaftKopral:
    << : *BLUEPRINT_PATENSCHAFT
    purposes: [ p5 ]

  rnwPatenschaftShelton:
    << : *BLUEPRINT_PATENSCHAFT
    purposes: [ p6 ]

# This is the extra text that will be appended to the terms of service
# section of all forms.
terms: >-
  Die Übermittlung der Daten erfolgt verschlüsselt. BOS Schweiz
  speichert selbst keine Kartendaten, Ihre Zahlungsdaten laufen direkt
  über RaiseNow, einem von der Kreditkartenindustrie (PCI DSS)
  zertifizierten Partner. Unsere Dienstleistenden dürfen die
  Informationen ausschliesslich zur Erfüllung ihrer Aufgaben nutzen
  und sind verpflichtet, die Datenschutzbestimmungen einzuhalten. Sie
  können Ihre Spende von Ihrem steuerbaren Einkommen abziehen.
  Spender*innen erhalten per E-Mail eine Spendenbestätigung für die
  Steuerbehörden. Die Spenden gehen an BOS Schweiz.
