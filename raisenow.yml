# The format of this file is YAML, here is a brief overview:
#
#   https://de.wikipedia.org/wiki/YAML
#
# The generated pages will be available here
#
#   https://www.bos-schweiz.ch/raisenow-forms/index.html
#
# Processing changes takes (at time of writing) approx. 20 seconds.
#
# Some docu can be found here
#
#   https://support.raisenow.com/hc/de/articles/360011968358-Anpassen-der-Konfiguration-Sprache-und-Bedingungen
#
debugging: &DEBUGGING
  debug: true
  # debugErrorMessages: true
  # debugSlots: true
  # debugStyles: true
  # testMode: true

tamaro:

  # ------------------------------ Teil I - Spenden

  rnwSpendeAllgemein: &SPENDE
    <<: *DEBUGGING
    language: de
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - if: showPaymentAddress() == true
        then: [ payment_address ]
    purposes: [ s1, s2, s3, s4, s5, s6 ]
    paymentFormPrefill:
      stored_customer_phone: null
    salutations:
      - Frau
      - Herr
      - Divers
    translations: &SPENDE_TRANSLATIONS
      de:
        purposes:
          s1: Allgemein
          s2: Bäume spenden
          s3: Rettungsstationen
          s4: Auswilderungen
          s5: Bären
          s6: Waldschutz
        payment_profile:
          donation_receipt_info_html: >-
            <p>Der Versand einer Spendenbescheinigung erfordert die Eingabe der Postadresse.</p>
        payment_form: &SPENDE_TRANSLATIONS_PAYMENT_FORM
          stored_customer_phone: Telefonnummer
        # payment_form:
        #   stored_customer_form_of_address: Anrede
        #   stored_customer_form_of_address_options:
        #     female: Frau
        #     male: Herr
        #     other: Divers
    showStoredCustomerBirthdate: true
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [20] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [10] }
      - { if: 'paymentType() == recurring and recurringInterval() == quaterly', then: [30] }
      - { if: 'paymentType() == recurring and recurringInterval() == semestral', then: [60] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [120] }

    slots: &SPENDE_SLOTS
      profile_form_4:
        - component: field
          type: text
          name: stored_customer_phone
          label: payment_form.stored_customer_phone

    # paymentFormPrefill:
    #   stored_customer_form_of_address: null
    # slots:
    #   profile_form_1:
    #     component: field
    #     type: radio-group
    #     name: stored_customer_form_of_address
    #     label: payment_form.stored_customer_form_of_address
    #     children:
    #       - component: field
    #         type: radio-in-group
    #         name: stored_customer_form_of_address
    #         text: payment_form.stored_customer_form_of_address_options.female
    #         value: female
    #       - component: field
    #         type: radio-in-group
    #         name: stored_customer_form_of_address
    #         text: payment_form.stored_customer_form_of_address_options.male
    #         value: male
    #       - component: field
    #         type: radio-in-group
    #         name: stored_customer_form_of_address
    #         text: payment_form.stored_customer_form_of_address_options.other
    #         value: other
    #   profile_form_6:
    #     # - component: paragraph
    #     #   html: HTML1
    #     #   inner_html: INNER_HTML1
    #     #   content: CONTENT1
    #     #   text: TEXT1
    #     #   text_html: TEXT_HTML1
    #     # - component: text
    #     #   html: HTML2
    #     #   inner_html: INNER_HTML2
    #     #   content: CONTENT2
    #     #   text: TEXT2
    #     #   text_html: TEXT_HTML2
    #     # - component: section
    #     #   html: HTML3
    #     #   inner_html: INNER_HTML3
    #     #   content: CONTENT3
    #     #   text: TEXT3
    #     #   text_html: TEXT_HTML3
    #     # - component: p
    #     #   html: HTML4
    #     #   inner_html: INNER_HTML4
    #     #   content: CONTENT4
    #     #   text: TEXT4
    #     #   text_html: TEXT_HTML4
    #     # - component: div
    #     #   html: HTML5
    #     #   inner_html: INNER_HTML5
    #     #   content: CONTENT5
    #     #   text: TEXT5
    #     #   text_html: TEXT_HTML5
    #   #profileForm6: camelCase
    #   #profile_form_7: <b>bold</b>
    #   #profileForm7: <i>italics</i>

  rnwSpendeBaeume:
    <<: *SPENDE
    purposes: [ s2 ]
    amounts:
      - if: paymentType() == onetime
        then:
          - 7.65
          - 38.25
          - 76.50
          - 765.00
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [7.65] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [10] }
      - { if: 'paymentType() == recurring and recurringInterval() == quaterly', then: [30] }
      - { if: 'paymentType() == recurring and recurringInterval() == semestral', then: [60] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [120] }
    translations:
      <<: *SPENDE_TRANSLATIONS
      de:
        amount_descriptions:
          - { if: 'amount() == 7.65', then: [ einen Baum spenden ] }
          - { if: 'amount() == 38.25', then: [ fünf Bäume spenden ] }
          - { if: 'amount() == 76.5', then: [ zehn Bäume spenden ] }
          - { if: 'amount() == 765', then: [ hundert Bäume spenden ] }

  rnwSpendeRettungsstationen:
    <<: *SPENDE
    purposes: [ s3 ]

  rnwSpendeAuswilderungen:
    <<: *SPENDE
    purposes: [ s4 ]

  rnwSpendeBaeren:
    <<: *SPENDE
    purposes: [ s5 ]

  rnwSpendeWaldschutz:
    <<: *SPENDE
    purposes: [ s6 ]

  # ------------------------------ Teil II - Patenschaften

  rnwPatenschaftAllgemein: &PATENSCHAFT
    <<: *SPENDE
    paymentWidgetBlocks:
      - payment_purposes
      - slot_1
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
      - if: paymentForm(stored_customer_sponsorship) == gift
        then: slot_2
    purposes: [ p1, p2, p3, p4, p5, p6 ]
    recurringIntervals:
      - monthly
      - yearly
    amounts:
      - { if: 'paymentType() == onetime', then: [300, 180] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25, 15] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300, 180] }
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [300, 180] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25, 15] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300, 180] }
    # hide it here, but add it in blocks at a diffrent location
    showStoredCustomerDonationReceipt: false
    # this is also used to define custom fields
    paymentFormPrefill:
      stored_customer_donation_receipt: true
      stored_recipient_salutation: null
      stored_recipient_firstname: null
      stored_recipient_lastname: null
      stored_recipient_email: null
      stored_recipient_street: null
      stored_recipient_street_number: null
      stored_recipient_zip_code: null
      stored_recipient_city: null
      stored_recipient_country: null
      stored_customer_delivery: null
      stored_customer_sponsorship: null
      stored_recipient_salutation_text: null
      stored_customer_delivery_to_customer: null
      stored_sxt_communication_keywords: 1888278
    # in order of appearance in the form
    slots:
      <<: *SPENDE_SLOTS
      slot_1:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_1.title
            - component: block_content
              children:
                - component: field
                  type: radio-group
                  inline: true
                  name: stored_customer_sponsorship
                  label: payment_form.stored_customer_sponsorship
                  formName: payment_form
                  children:
                    - component: field
                      type: radio-in-group
                      name: stored_customer_sponsorship
                      text: payment_form.stored_customer_sponsorships.regular
                      value: regular
                    - component: field
                      type: radio-in-group
                      name: stored_customer_sponsorship
                      text: payment_form.stored_customer_sponsorships.gift
                      value: gift
      slot_2:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_2.title
            - component: block_content
              children:
                - component: field
                  type: select
                  formName: payment_form
                  name: stored_recipient_salutation
                  label: payment_form.stored_recipient_salutation_label
                  placeholder: payment_form.stored_recipient_salutation_placeholder
                  options:
                    - value: mr
                      label: payment_form.salutations.mr
                    - value: ms
                      label: payment_form.salutations.ms
                    - value: neutral
                      label: payment_form.salutations.neutral
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_firstname
                  label: payment_form.stored_customer_firstname
                  placeholder: payment_form.stored_customer_firstname
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_lastname
                  label: payment_form.stored_customer_lastname
                  placeholder: payment_form.stored_customer_lastname
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_email
                  label: payment_form.stored_customer_email
                  placeholder: payment_form.stored_customer_email
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street
                  label: payment_form.stored_customer_street
                  placeholder: payment_form.stored_customer_street
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street_number
                  label: payment_form.stored_customer_street_number
                  placeholder: payment_form.stored_customer_street_number
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_zip_code
                  label: payment_form.stored_customer_zip_code
                  placeholder: payment_form.stored_customer_zip_code
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_city
                  label: payment_form.stored_customer_city
                  placeholder: payment_form.stored_customer_city
                - component: field
                  type: select
                  formName: payment_form
                  name: stored_recipient_country
                  label: payment_form.stored_customer_country
                  placeholder: payment_form.stored_customer_country
                  options: null
                - component: field
                  type: radio-group
                  inline: false
                  name: stored_customer_delivery
                  label: payment_form.stored_customer_delivery
                  formName: payment_form
                  children:
                    - component: field
                      type: radio-in-group
                      name: stored_customer_delivery
                      text: payment_form.stored_customer_deliverys.customer
                      value: customer
                    - component: field
                      type: radio-in-group
                      name: stored_customer_delivery
                      text: payment_form.stored_customer_deliverys.recipient
                      value: recipient
      address_form_end:
        - component: field
          type: checkbox
          name: stored_customer_donation_receipt
          text: payment_form.stored_customer_donation_receipt
          formName: paymentFrom
          value: receipt
    translations: &PATENSCHAFT_TRANSLATIONS
      <<: *SPENDE_TRANSLATIONS
      de:
        purposes:
          p1: Patenschaft für die Rettungsstationen
          p2: Patenschaft für Topan
          p3: Patenschaft für Bumi
          p4: Patenschaft für Davi
          p5: Patenschaft für Kopral
          p6: Patenschaft für Shelton
        amount_descriptions:
          - if: 'paymentType() == recurring and recurringInterval() == monthly and amount() == 25'
            then: [ Normalpreis ]
          - if: 'amount() == 300'
            then: [ Normalpreis ]
          - if: 'amount() == custom_amount'
            then: [ '' ]
          - Ermässigt für Kinder
        payment_form:
          <<: *SPENDE_TRANSLATIONS_PAYMENT_FORM
          stored_customer_delivery: Versand
          stored_customer_deliverys:
            customer: Versand an mich
            recipient: Versand an beschenkte Person
          stored_recipient_salutation_label: Anrede
          stored_customer_sponsorship: Bitte auswählen
          stored_customer_sponsorships:
            regular: Patenschaft für mich
            gift: Patenschaft als Geschenk
          salutations:
            neutral: Divers
        blocks: &PATENSCHAFT_TRANSLATIONS_BLOCKS
          slot_1:
            title: Art der Patenschaft
          payment_profile:
            title: Personalien angeben (für Patenurkunde und -update)
          payment_address:
            title: Adresse angeben (für Versand der Patenurkunde)
          slot_2:
            title: Personalien der/des Beschenkten (für Patenurkunde und -update)
        payment_submit:
          submit: Patenschaftsbeitrag sicher übermitteln

  # TODO: this is a work in progress
  rnwPatenschaftSchenken: &PATENSCHAFT_SCHENKEN
    <<: *PATENSCHAFT
    paymentTypes: [ onetime ]
    translations:
      <<: *PATENSCHAFT_TRANSLATIONS
      blocks:
        <<: *PATENSCHAFT_TRANSLATIONS_BLOCKS
        payment_amounts_and_intervals:
          title: Betrag der Spende wählen

  rnwPatenschaftRettungsstationen:
    <<: *PATENSCHAFT
    purposes: [ p1 ]

  rnwPatenschaftTopan:
    <<: *PATENSCHAFT
    purposes: [ p2 ]

  rnwPatenschaftBumi:
    <<: *PATENSCHAFT
    purposes: [ p3 ]

  rnwPatenschaftDavi:
    <<: *PATENSCHAFT
    purposes: [ p4 ]

  rnwPatenschaftKopral:
    <<: *PATENSCHAFT
    purposes: [ p5 ]

  rnwPatenschaftShelton:
    <<: *PATENSCHAFT
    purposes: [ p6 ]

# This is the extra text that will be appended to the terms of service
# section of all forms.
terms: >-
  Die Übermittlung der Daten erfolgt verschlüsselt. BOS Schweiz
  speichert selbst keine Kartendaten, Ihre Zahlungsdaten laufen direkt
  über RaiseNow, einem von der Kreditkartenindustrie (PCI DSS)
  zertifizierten Partner. Unsere Dienstleistenden dürfen die
  Informationen ausschliesslich zur Erfüllung ihrer Aufgaben nutzen
  und sind verpflichtet, die Datenschutzbestimmungen einzuhalten. Sie
  können Ihre Spende von Ihrem steuerbaren Einkommen abziehen.
  Spender*innen erhalten per E-Mail eine Spendenbestätigung für die
  Steuerbehörden. Die Spenden gehen an BOS Schweiz.
