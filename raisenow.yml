# The format of this file is YAML, here is a brief overview:
#
#   https://de.wikipedia.org/wiki/YAML
#
# The generated pages will be available here
#
#   https://www.bos-schweiz.ch/raisenow-forms/index.html
#
# Processing changes takes (at time of writing) approx. 20 seconds.
#
# Some docu can be found here
#
#   https://support.raisenow.com/hc/de/articles/360011968358-Anpassen-der-Konfiguration-Sprache-und-Bedingungen
#
debugging: &DEBUGGING
  debug: true
  # debugErrorMessages: true
  # debugSlots: true
  # debugStyles: true
  # testMode: true

features:
  two-options-certificate: &TWO-OPTIONS-CERTIFICATE
    paymentWidgetBlocks:
      - payment_purposes
      - slot_1
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    paymentFormPrefill:
      stored_customer_certificate: grasspaper
    amounts: &SPENDE_BAEUME_AMOUNTS
      - if: paymentForm(stored_customer_certificate) == grasspaper
        then: [ 9.65, 40.25, 78.50, 193.25 ]
      - if: paymentForm(stored_customer_certificate) != grasspaper
        then: [ 7.65, 38.25, 76.50, 191.25 ]
    minimumCustomAmount: &SPENDE_BAEUME_MINIMUMCUSTOMAMOUNTS
      - { if: 'paymentForm(stored_customer_certificate) == grasspaper', then: [9.65] }
      - { if: 'paymentForm(stored_customer_certificate) != grasspaper', then: [7.65] }
    translations:
      de:
        blocks:
          payment_address:
            title: Adresse angeben (für Zahlung und ggf. Versand der Urkunde)
          slot_1:
            title: Urkunde wählen
        payment_form:
          stored_customer_certificates:
            grasspaper: Mit Graspapier Urkunde
            digital: Mit digitaler Urkunde
            none: Ohne Urkunde
    slots: &SPENDE_BAEUME_SLOTS
      slot_1:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_1.title
            - component: block_content
              children:
                - component: field
                  type: radio-group
                  inline: true
                  name: stored_customer_certificate
                  # label: payment_form.stored_customer_certificate
                  formName: payment_form
                  children:
                    - component: field
                      type: radio-in-group
                      name: stored_customer_certificate
                      text: payment_form.stored_customer_certificates.grasspaper
                      value: grasspaper
                    - component: field
                      type: radio-in-group
                      name: stored_customer_certificate
                      text: payment_form.stored_customer_certificates.digital
                      value: digital

tamaro:

  # ------------------------------ Teil I - Spenden

  rnwSpendeAuswahl: &SPENDE_AUSWAHL
    # <<: *DEBUGGING
    language: de
    requireSwissQrBillReferenceNumber: true
    paymentMethods:
      - twi  # twint
      - vis  # visa
      - eca  # mastercard
      - pfc  # postfinance card
      - pef  # postfinance e-finance
      - pp   # paypal
      - if: amount() >= 25
        then: [chqr] # qrcode
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    purposes: [ s1, s2, s3, s4, s5, s6 ]
    paymentTypes: [ onetime, recurring ]
    paymentFormPrefill:
      # by default the checkbox donation receipt is checked
      stored_customer_donation_receipt: true
      stored_customer_phone: null
    purposeDetails:
      s1:  { stored_campaign_id: '7010900000019JLAAY' }
      s2:  { stored_campaign_id: '70109000000198NAAQ' }
      s3:  { stored_campaign_id: '70109000000198SAAQ' }
      s4:  { stored_campaign_id: '70109000000198TAAQ' }
      s5:  { stored_campaign_id: '70109000000198UAAQ' }
      s6:  { stored_campaign_id: '70109000000198XAAQ' }
      s7:  { stored_campaign_id: '70109000000198cAAA' }
      s8:  { stored_campaign_id: '7010900000019AdAAI' }
      s9:  { stored_campaign_id: '70109000000198hAAA' }
      s10: { stored_campaign_id: '70109000000198YAAQ' }
      s11: { stored_campaign_id: '70109000000199QAAQ' } # Einzelperson, andere werden im JS gesetzt
      s12: { stored_campaign_id: '70109000000198rAAA' }
      s13: { stored_campaign_id: '70109000000198tAAA' }
      s14: { stored_campaign_id: '701090000001991AAA' }
      s15: { stored_campaign_id: '701090000001996AAA' }
      s16: { stored_campaign_id: '70109000000199BAAQ' }
      s17: { stored_campaign_id: '70109000000199GAAQ' }
      s18: { stored_campaign_id: '701090000001992AAA' }
      p1:  { stored_campaign_id: '70109000000199fAAA' } # Eigenpatenschaften
      p2:  { stored_campaign_id: '70109000000199gAAA' }
      p3:  { stored_campaign_id: '70109000000199kAAA' }
      p4:  { stored_campaign_id: '70109000000199pAAA' }
      p5:  { stored_campaign_id: '70109000000199bAAA' }
      p6:  { stored_campaign_id: '70109000000199qAAA' }
    translations:
      de:
        purposes:
          s1: Freie Spende
          s2: Aufforstung
          s3: Rettungsstationen
          s4: Auswilderungen
          s5: Bären
          s6: Waldschutz
          s7: Bäume spenden
          s8: Bäume schenken
          s9: BOS Schweiz Bildungsprogramm
          s10: Kondolenz-Spende
          s11: Fördermitgliedschaft
          s12: Besondere Spendenaktion
          s13: Milchfläschchen
          s14: Gemüse- und Früchtekorb
          s15: Spielzeug
          s16: Schubkarren
          s17: Versorgung Auswilderung
          s18: Medikamente
          p1: Patenschaft für die Rettungsstationen
          p2: Patenschaft für Topan
          p3: Patenschaft für Bumi
          p4: Patenschaft für Davi
          p5: Patenschaft für Kopral
          p6: Patenschaft für Shelton
        payment_profile:
          donation_receipt_info_html: >-
            <p>Der Versand einer Spendenbescheinigung erfordert die Eingabe der Postadresse.</p>
        info_toggle:
          stored_customer_birthdate:
            text_html: >-
              BOS Schweiz bietet unter 18-Jährigen Patenschaften zum
              ermässigten Preis. Aus diesem Grund bitten wir um eine
              Altersangabe in Form des Geburtsdatums. Zudem ermöglicht
              diese Angabe das Versenden eines Geburtstagsgrusses.
          # this is theoretically the right place if RaiseNow supports it
          stored_recipient_email:
            text_html: >-
              Für Updates und so. Bitte ändere mich.
        payment_form:
          stored_customer_phone: Telefonnummer (optional)
          stored_customer_info_text_long: >-
            <p style="padding: 1rem; font-size: 80%; border: thin
            solid lightgray">Die Übermittlung der Daten erfolgt
            verschlüsselt. BOS Schweiz speichert selbst keine
            Kartendaten, Ihre Zahlungsdaten laufen direkt über
            RaiseNow, einem von der Kreditkartenindustrie (PCI DSS)
            zertifizierten Partner. Unsere Dienstleistenden dürfen die
            Informationen ausschliesslich zur Erfüllung ihrer Aufgaben
            nutzen und sind verpflichtet, die Datenschutzbestimmungen
            einzuhalten. Sie können Ihre Spende von Ihrem steuerbaren
            Einkommen abziehen. Spender*innen erhalten per Post oder
            per E-Mail eine Spendenbestätigung für die Steuerbehörden.
            Die Spenden gehen an BOS Schweiz.</p>
          salutations:
            neutral: Neutrale Anrede
        validation_errors:
          amount:
            minimum_custom_amount: Bitte einen Betrag über {{min}} Franken eingeben
    showStoredCustomerBirthdate: true
    # minimumCustomAmount:
    #   - { if: 'paymentType() == onetime', then: [20] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [10] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == quaterly', then: [30] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == semestral', then: [60] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [120] }
    # hide it here, but add it in blocks at a different location
    showStoredCustomerDonationReceipt: false
    slots:
      # add the donation receipt field to the end of the address form
      address_form_end:
        - component: field
          type: checkbox
          name: stored_customer_donation_receipt
          text: payment_form.stored_customer_donation_receipt
          formName: paymentFrom
          value: receipt
      profile_form_4:
        # TODO: make "optional" show up
        - component: field
          type: text
          name: stored_customer_phone
          label: payment_form.stored_customer_phone
      blocks_end:
        - component: content
          formName: payment_form
          text_html: payment_form.stored_customer_info_text_long
    # in order of appearance
    paymentValidations:
      amount:
        minimum_custom_amount: true
        maximum_custom_amount: true
      stored_customer_salutation: { required: true }
      stored_customer_firstname:  { required: true }
      stored_customer_lastname:   { required: true }
      stored_customer_email:
        if: paymentForm(stored_customer_email_permission)
        required: true
      stored_customer_street:        { required: true }
      stored_customer_street_number: { required: true }
      stored_customer_zip_code:      { required: true }
      stored_customer_city:          { required: true }
      stored_customer_country:       { required: true }
  # /rnwSpendeAuswahl: &SPENDE_AUSWAHL

  rnwSpendeUngebunden:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s1 ]

  rnwSpendeRettungsstationen:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s3 ]

  rnwSpendeAuswilderungen:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s4 ]

  rnwSpendeBaeren:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s5 ]

  rnwSpendeWaldschutz:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s6 ]

  rnwSpendeBildungsprogramm:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s9 ]

  rnwSpendeAuswahlNurEmail: &SPENDE_AUSWAHL_NUR_EMAIL
    # NOTE: intentionally not a deep merge, because of validations
    <<: *SPENDE_AUSWAHL
    showStoredCustomerDonationReceipt: true
    paymentFormPrefill:
      stored_customer_donation_receipt: false
      stored_customer_phone: null
    paymentValidations:
      stored_customer_salutation: { required: true }
      stored_customer_firstname:  { required: true }
      stored_customer_lastname:   { required: true }
      # NOTE: deep merge would retain the condition
      stored_customer_email:      { required: true }
      stored_customer_street: &REQUIRED_IF_DONATION_RECEIPT
        if: paymentForm(stored_customer_donation_receipt)
        required: true
      stored_customer_street_number: *REQUIRED_IF_DONATION_RECEIPT
      stored_customer_zip_code:      *REQUIRED_IF_DONATION_RECEIPT
      stored_customer_city:          *REQUIRED_IF_DONATION_RECEIPT
      stored_customer_country:       *REQUIRED_IF_DONATION_RECEIPT
    slots:
      profile_form_4:
        # TODO: make "optional" show up
        - component: field
          type: text
          name: stored_customer_phone
          label: payment_form.stored_customer_phone
      blocks_end:
        - component: content
          formName: payment_form
          text_html: payment_form.stored_customer_info_text_long

  rnwSpendeUngebundenNurEmail:
    <<<: *SPENDE_AUSWAHL_NUR_EMAIL
    purposes: [ s1 ]

  rnwSpendeFoerdermitglied:
    <<<: *SPENDE_AUSWAHL
    purposes: [ s11 ]
    amounts: [ 60, 120, 300 ]
    paymentTypes: [ recurring ]
    recurringIntervals: [ yearly ]
    allowCustomAmount: false
    translations:
      de:
        amount_descriptions:
          - { if: 'amount() == 60', then:  [ Einzelperson ] }
          - { if: 'amount() == 120', then:  [ Familie ] }
          - { if: 'amount() == 300', then:  [ Juristische Person ] }
        payment_form:
          supscription_cancelation_policy: >-
            Ihr Mitgliedsbeitrag wird jährlich fällig. Sie können Ihre
            Mitgliedschaft jederzeit beenden.
    slots:
      payment_types_end:
        - component: content
          formName: payment_form
          text_html: payment_form.supscription_cancelation_policy

  rnwSpendeBaeume: &SPENDE_BAEUME
    <<<: *SPENDE_AUSWAHL
    paymentWidgetBlocks:
      - payment_purposes
      - slot_1
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    purposes: [ s7 ]
    paymentFormPrefill:
      stored_customer_certificate: grasspaper
    amounts: &SPENDE_BAEUME_AMOUNTS
      - if: paymentForm(stored_customer_certificate) == grasspaper
        then: [ 9.65, 40.25, 78.50, 193.25 ]
      - if: paymentForm(stored_customer_certificate) != grasspaper
        then: [ 7.65, 38.25, 76.50, 191.25 ]
    minimumCustomAmount: &SPENDE_BAEUME_MINIMUMCUSTOMAMOUNTS
      - { if: 'paymentForm(stored_customer_certificate) == grasspaper', then: [9.65] }
      - { if: 'paymentForm(stored_customer_certificate) != grasspaper', then: [7.65] }
    translations:
      de:
        amount_descriptions: &SPENDE_BAEUME_TRANSLATIONS_AMOUNTDESCRIPTIONS
          # s7: with paper
          - { if: 'amount() == 9.65', then: [ 1 Baum inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 40.25', then: [ 5 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 78.50', then: [ 10 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 193.25', then: [ 25 Bäume inkl. 5 Jahre Pflege ] }
          # s8: without paper
          - { if: 'amount() == 7.65', then: [ 1 Baum inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 38.25', then: [ 5 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 76.5', then: [ 10 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 191.25', then: [ 25 Bäume inkl. 5 Jahre Pflege ] }
        blocks:
          payment_address:
            title: Adresse angeben (für Zahlung und ggf. Versand der Urkunde)
          slot_1:
            title: Urkunde wählen
        payment_form:
          stored_customer_certificates:
            grasspaper: Mit Graspapier Urkunde
            digital: Mit digitaler Urkunde
            none: Ohne Urkunde
    slots: &SPENDE_BAEUME_SLOTS
      slot_1:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_1.title
            - component: block_content
              children:
                - component: field
                  type: radio-group
                  inline: true
                  name: stored_customer_certificate
                  # label: payment_form.stored_customer_certificate
                  formName: payment_form
                  children:
                    - component: field
                      type: radio-in-group
                      name: stored_customer_certificate
                      text: payment_form.stored_customer_certificates.grasspaper
                      value: grasspaper
                    - component: field
                      type: radio-in-group
                      name: stored_customer_certificate
                      text: payment_form.stored_customer_certificates.digital
                      value: digital
                    - component: field
                      type: radio-in-group
                      name: stored_customer_certificate
                      text: payment_form.stored_customer_certificates.none
                      value: none

  rnwSpendeHilfspaketeAuswahl:
    <<<: *SPENDE_BAEUME
    paymentWidgetBlocks:
      - payment_purposes
      - slot_1
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    purposes: [ s13, s14, s15, s16, s17, s18 ]
    paymentFormPrefill:
      stored_customer_certificate: grasspaper
    amounts:
      - if: paymentForm(stored_customer_certificate) == grasspaper
        then: [ 22, 52, 102, 202 ]
      - if: paymentForm(stored_customer_certificate) != grasspaper
        then: [ 20, 50, 100, 200 ]
    minimumCustomAmount:
      - { if: 'paymentForm(stored_customer_certificate) == grasspaper', then: [22] }
      - { if: 'paymentForm(stored_customer_certificate) != grasspaper', then: [20] }
    translations:
      de:
        blocks:
          payment_purposes:
            title: Hilfspakete wählen

  rnwSpendeKondolenz: &SPENDE_KONDOLENZ
    <<<: *SPENDE_AUSWAHL
    purposes: [ s10 ]
    paymentTypes: [ onetime ]
    slots:
      purposes_end:
        - component: field
          type: text
          name: stored_customer_subject
          placeholder: payment_form.stored_customer_subject_placeholder
          label: payment_form.stored_customer_subject
    paymentFormPrefill:
      stored_customer_subject: null
    translations:
      de:
        payment_form:
          stored_customer_subject: Name der/des Verstorbenen
        validation_errors:
          stored_customer_subject:
            field_is_missing: Für die Zuordnung Ihrer Spende benötigen wir einen Namen
    paymentValidations:
      stored_customer_subject:
        required: true

  rnwSpendeBesondereAktionen:
    <<<: *SPENDE_KONDOLENZ
    purposes: [ s12 ]
    translations:
      de:
        payment_form:
          stored_customer_subject: Details zum Spendenaufruf
          stored_customer_subject_placeholder: z.B. Geburtstag Hans Muster
        validation_errors:
          stored_customer_subject:
            field_is_missing: Für die Zuordnung Ihrer Spende benötigen wir einen Namen

  # ------------------------------ Teil II - Patenschaften

  rnwPatenschaftAuswahl: &PATENSCHAFT
    <<<: *SPENDE_AUSWAHL
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    purposes: [ p1, p2, p3, p4, p5 ]
    recurringIntervals:
      - monthly
      - yearly
    amounts:
      - { if: 'paymentType() == onetime', then: [300, 180] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25, 15] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300, 180] }
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [300] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300] }
    translations:
      de:
        amount_descriptions:
          - if: 'paymentType() == recurring and recurringInterval() == monthly and amount() == 25'
            then: [ Normalpreis ]
          - if: 'amount() == 300'
            then: [ Normalpreis ]
          - if: 'amount() == custom_amount'
            then: [ '' ]
          - Ermässigt für Kinder
        payment_form:
          stored_customer_delivery: Versand
          stored_customer_deliveries:
            customer: Versand an mich
            recipient: Versand an beschenkte Person
          stored_recipient_salutation_label: Anrede
        blocks:
          payment_profile:
            title: Personalien angeben (für Patenurkunde und -update)
          payment_address:
            title: Adresse angeben (für den Versand der Patenurkunde)
        payment_submit:
          submit: Patenschaftsbeitrag sicher übermitteln

  rnwPatenschaftRettungsstationen:
    <<<: *PATENSCHAFT
    purposes: [ p1 ]

  rnwPatenschaftTopan:
    <<<: *PATENSCHAFT
    purposes: [ p2 ]

  rnwPatenschaftBumi:
    <<<: *PATENSCHAFT
    purposes: [ p3 ]

  rnwPatenschaftDavi:
    <<<: *PATENSCHAFT
    purposes: [ p4 ]

  rnwPatenschaftKopral:
    <<<: *PATENSCHAFT
    purposes: [ p5 ]

  rnwPatenschaftShelton:
    <<<: *PATENSCHAFT
    purposes: [ p6 ]

  # ------------------------------ Teil III - Schenken

  rnwSchenkenPatenschaftAuswahl: &PATENSCHAFT_SCHENKEN
    <<<: *PATENSCHAFT
    purposeDetails:
      # Hilfspakete
      s13: { stored_campaign_id: '7010900000019AAAAY' }
      s14: { stored_campaign_id: '7010900000019ATAAY' }
      s15: { stored_campaign_id: '7010900000019A6AAI' }
      s16: { stored_campaign_id: '7010900000019APAAY' }
      s17: { stored_campaign_id: '7010900000019A0AAI' }
      s18: { stored_campaign_id: '7010900000019ABAAY' }
      # Patenschaften
      p1:  { stored_campaign_id: '7010900000019AOAAY' }
      p2:  { stored_campaign_id: '7010900000019A4AAI' }
      p3:  { stored_campaign_id: '7010900000019A5AAI' }
      p4:  { stored_campaign_id: '7010900000019A9AAI' }
      p5:  { stored_campaign_id: '7010900000019AEAAY' }
      p6:  { stored_campaign_id: '7010900000019AJAAY' }
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
      - slot_4
      - slot_2
      - if: paymentForm(stored_customer_delivery) == recipient
        then: slot_3
    # gifts cannot be recurring
    paymentTypes: [ onetime ]
    paymentFormPrefill:
      stored_recipient_salutation: null
      stored_recipient_firstname: null
      stored_recipient_lastname: null
      stored_recipient_email: null
      stored_recipient_birthdate: null
      stored_recipient_street: null
      stored_recipient_street_number: null
      stored_recipient_street2: null
      stored_recipient_zip_code: null
      stored_recipient_city: null
      stored_recipient_country: null
      stored_customer_delivery: null
      # stored_sxt_communication_keywords: 1888278
    translations:
      de:
        payment_form:
           stored_recipient_email: E-Mail (optional)
           stored_recipient_birthdate: Geburtsdatum (optional)
           stored_recipient_birthdate_info_bubble_html: >-
             BOS Schweiz bietet unter 18-Jährigen Patenschaften zum
             ermässigten Preis. Aus diesem Grund bitten wir um eine
             Altersangabe in Form des Geburtsdatums. Zudem ermöglicht
             diese Angabe das Versenden eines Geburtstagsgrusses.
        blocks:
          payment_amounts_and_intervals:
            title: Betrag der Spende wählen
          payment_profile:
            title: Personalien der schenkenden Person (für Zahlung, Rückfragen und Updates)
          payment_address:
            title: Adresse der schenkenden Person (für Zahlung)
          slot_2:
            title: Versand der Urkunde
          slot_3:
            title: Adresse der beschenkten Person
          slot_3:
            title: Name der beschenkten Person auf der Urkunde
        validation_errors:
          stored_customer_delivery:       { field_is_missing: Bitte eine Option wählen }
          stored_recipient_salutation:    { field_is_missing: Bitte Anrede auswählen }
          stored_recipient_firstname:     { field_is_missing: Bitte Vorname angeben }
          stored_recipient_lastname:      { field_is_missing: Bitte Nachname angeben }
          stored_recipient_email:         { field_is_missing: Bitte Emailadresse angeben }
          stored_recipient_street:        { field_is_missing: Bitte Strasse angeben }
          stored_recipient_street_number: { field_is_missing: Bitte Hausnummer angeben }
          stored_recipient_zip_code:      { field_is_missing: Bitte Postleitzahl angeben }
          stored_recipient_city:          { field_is_missing: Bitte Ort angeben }
          stored_recipient_country:       { field_is_missing: Bitte Land auswählen }
    slots:
      slot_2:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_2.title
            - component: block_content
              children:
                - component: field
                  type: radio-group
                  inline: true
                  name: stored_customer_delivery
                  # label: payment_form.stored_customer_delivery
                  formName: payment_form
                  children:
                    - component: field
                      type: radio-in-group
                      name: stored_customer_delivery
                      text: payment_form.stored_customer_deliveries.customer
                      value: customer
                    - component: field
                      type: radio-in-group
                      name: stored_customer_delivery
                      text: payment_form.stored_customer_deliveries.recipient
                      value: recipient
      slot_4:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_3.title
            - component: block_content
              children:
                - component: field
                  type: select
                  formName: payment_form
                  name: stored_recipient_salutation
                  label: payment_form.stored_recipient_salutation_label
                  placeholder: payment_form.stored_recipient_salutation_placeholder
                  options:
                    - value: mr
                      label: payment_form.salutations.mr
                    - value: ms
                      label: payment_form.salutations.ms
                    - value: neutral
                      label: payment_form.salutations.neutral
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_firstname
                  label: payment_form.stored_customer_firstname
                  placeholder: payment_form.stored_customer_firstname
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_lastname
                  label: payment_form.stored_customer_lastname
                  placeholder: payment_form.stored_customer_lastname
      slot_3:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_3.title
            - component: block_content
              children:
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_email
                  label: payment_form.stored_recipient_email
                  placeholder: payment_form.stored_customer_email
                - component: field
                  type: date
                  formName: payment_form
                  name: stored_recipient_birthdate
                  label: payment_form.stored_recipient_birthdate
                  placeholder: payment_form.stored_customer_birthdate
                  infoToggleTextHTML: payment_form.stored_recipient_birthdate_info_bubble_html
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street
                  label: payment_form.stored_customer_street
                  placeholder: payment_form.stored_customer_street
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street_number
                  label: payment_form.stored_customer_street_number
                  placeholder: payment_form.stored_customer_street_number
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street2
                  label: payment_form.stored_customer_street2
                  placeholder: payment_form.stored_customer_street2
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_zip_code
                  label: payment_form.stored_customer_zip_code
                  placeholder: payment_form.stored_customer_zip_code
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_city
                  label: payment_form.stored_customer_city
                  placeholder: payment_form.stored_customer_city
                - component: field
                  type: select
                  formName: payment_form
                  name: stored_recipient_country
                  label: payment_form.stored_customer_country
                  placeholder: payment_form.stored_customer_country
                  # TODO: find out how to populate this with countries
                  options: null
    paymentValidations:
      # TODO: why does this not work
      stored_customer_email: { required: true }
      stored_customer_delivery: { required: true }
      stored_recipient_salutation:    &REQUIRED_IF_DELIVERY_TO_RECIPIENT
        if: paymentForm(stored_customer_delivery) == recipient
        required: true
      stored_recipient_firstname:     *REQUIRED_IF_DELIVERY_TO_RECIPIENT
      stored_recipient_lastname:      *REQUIRED_IF_DELIVERY_TO_RECIPIENT
      stored_recipient_street:        *REQUIRED_IF_DELIVERY_TO_RECIPIENT
      stored_recipient_street_number: *REQUIRED_IF_DELIVERY_TO_RECIPIENT
      stored_recipient_zip_code:      *REQUIRED_IF_DELIVERY_TO_RECIPIENT
      stored_recipient_city:          *REQUIRED_IF_DELIVERY_TO_RECIPIENT
      stored_recipient_country:       *REQUIRED_IF_DELIVERY_TO_RECIPIENT

  rnwSchenkenPatenschaftRettungsstationen:
    <<<: *PATENSCHAFT_SCHENKEN
    purposes: [ p1 ]

  rnwSchenkenPatenschaftTopan:
    <<<: *PATENSCHAFT_SCHENKEN
    purposes: [ p2 ]

  rnwSchenkenPatenschaftBumi:
    <<<: *PATENSCHAFT_SCHENKEN
    purposes: [ p3 ]

  rnwSchenkenPatenschaftDavi:
    <<<: *PATENSCHAFT_SCHENKEN
    purposes: [ p4 ]

  rnwSchenkenPatenschaftKopral:
    <<<: *PATENSCHAFT_SCHENKEN
    purposes: [ p5 ]

  rnwSchenkenPatenschaftShelton:
    <<<: *PATENSCHAFT_SCHENKEN
    purposes: [ p6 ]

  rnwSchenkenHilfspaketeAuswahl:
    <<<1: *PATENSCHAFT_SCHENKEN
    <<<2: *TWO-OPTIONS-CERTIFICATE
    purposes: [ s13, s14, s15, s16, s17, s18 ]
    amounts:
      - if: paymentForm(stored_customer_certificate) == grasspaper
        then: [ 22, 52, 102, 202 ]
      - if: paymentForm(stored_customer_certificate) != grasspaper
        then: [ 20, 50, 100, 200 ]
    minimumCustomAmount:
      - { if: 'paymentForm(stored_customer_certificate) == grasspaper', then: [22] }
      - { if: 'paymentForm(stored_customer_certificate) != grasspaper', then: [20] }
    paymentWidgetBlocks:
      - payment_purposes
      - slot_1
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
      - slot_2
      - if: paymentForm(stored_customer_delivery) == recipient
        then: slot_3
    translations:
      de:
        amount_descriptions: []
        blocks:
          payment_purposes:
            title: Hilfspakete wählen

  # ------------------------------ Teil IV - Bäume schenken

  rnwSchenkenBaeume:
    <<<1: *PATENSCHAFT_SCHENKEN
    <<<2: *TWO-OPTIONS-CERTIFICATE
    purposes: [ s8 ]
    paymentWidgetBlocks:
      - payment_purposes
      - slot_1
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
      - slot_2
      - if: paymentForm(stored_customer_delivery) == recipient
        then: slot_3
    translations:
      de:
        amount_descriptions: []
    #amounts: *SPENDE_BAEUME_AMOUNTS
    #minimumCustomAmount: *SPENDE_BAEUME_MINIMUMCUSTOMAMOUNTS
    #translations:
    #  de:
    #    amount_descriptions: *SPENDE_BAEUME_TRANSLATIONS_AMOUNTDESCRIPTIONS

# Goodbye and good night. EOF
