# The format of this file is YAML, here is a brief overview:
#
#   https://de.wikipedia.org/wiki/YAML
#
# The generated pages will be available here
#
#   https://www.bos-schweiz.ch/raisenow-forms/index.html
#
# Processing changes takes (at time of writing) approx. 20 seconds.
#
# Some docu can be found here
#
#   https://support.raisenow.com/hc/de/articles/360011968358-Anpassen-der-Konfiguration-Sprache-und-Bedingungen
#
debugging: &DEBUGGING
  debug: true
  # debugErrorMessages: true
  # debugSlots: true
  # debugStyles: true
  # testMode: true

tamaro:

  # ------------------------------ Teil I - Spenden

  rnwSpendeAllgemein: &SPENDE
    <<: *DEBUGGING
    language: de
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    purposes: [ s1, s2, s3, s4, s5, s6 ]
    paymentTypes: [ onetime, recurring ]
    paymentFormPrefill: &SPENDE_PAYMENTFORMPREFILL
      # by default the checkbox donation receipt is checked
      stored_customer_donation_receipt: true
      stored_customer_phone: null
    translations:
      de: &SPENDE_TRANSLATIONS_DE
        purposes:
          s1: Allgemein
          s2: Aufforstung
          s3: Rettungsstationen
          s4: Auswilderungen
          s5: Bären
          s6: Waldschutz
          s7: Bäume spenden mit Grasspapier Urkunde
          s8: Bäume spenden ohne Urkunde
          s9: Bäume schenken mit Grasspapier Urkunde
          s10: Bäume schenken mit digitaler Urkunde
          s11: Hilfspaket spenden mit Grasspapier Urkunde
          s12: Hilfspaket spenden ohne Urkunde
          s13: Fördermitgliedschaft
          s14: Hilfspaket schenken mit Grasspapier Urkunde
          s15: Hilfspaket schenken mit digitaler Urkunde
          p1: Patenschaft für die Rettungsstationen
          p2: Patenschaft für Topan
          p3: Patenschaft für Bumi
          p4: Patenschaft für Davi
          p5: Patenschaft für Kopral
          p6: Patenschaft für Shelton
        payment_profile:
          donation_receipt_info_html: >-
            <p>Der Versand einer Spendenbescheinigung erfordert die Eingabe der Postadresse.</p>
        info_toggle:
          stored_customer_birthdate:
            text_html: >-
              Hallo, dies ist ein Test. Bitte ändere mich.
          # this is theoretically the right place if RaiseNow supports it
          stored_recipient_email:
            text_html: >-
              Für Updates und so. Bitte ändere mich.
        payment_form: &SPENDE_TRANSLATIONS_PAYMENT_FORM
          stored_customer_phone: Telefonnummer
          stored_customer_info_text_long: >-
            <p style="padding: 1rem; font-size: 80%; border: thin
            solid lightgray">Die Übermittlung der Daten erfolgt
            verschlüsselt. BOS Schweiz speichert selbst keine
            Kartendaten, Ihre Zahlungsdaten laufen direkt über
            RaiseNow, einem von der Kreditkartenindustrie (PCI DSS)
            zertifizierten Partner. Unsere Dienstleistenden dürfen die
            Informationen ausschliesslich zur Erfüllung ihrer Aufgaben
            nutzen und sind verpflichtet, die Datenschutzbestimmungen
            einzuhalten. Sie können Ihre Spende von Ihrem steuerbaren
            Einkommen abziehen. Spender*innen erhalten per Post oder
            per E-Mail eine Spendenbestätigung für die Steuerbehörden.
            Die Spenden gehen an BOS Schweiz.</p>
          salutations:
            neutral: Neutrale Anrede
    showStoredCustomerBirthdate: true
    # minimumCustomAmount:
    #   - { if: 'paymentType() == onetime', then: [20] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [10] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == quaterly', then: [30] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == semestral', then: [60] }
    #   - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [120] }
    slots: &SPENDE_SLOTS
      profile_form_4:
        - component: field
          type: text
          name: stored_customer_phone
          label: payment_form.stored_customer_phone
      blocks_end:
        - component: content
          formName: payment_form
          text_html: payment_form.stored_customer_info_text_long
    # in order of appearance
    paymentValidations: &SPENDE_PAYMENTVALIDATIONS
      amount:
        minimum_custom_amount: true
        maximum_custom_amount: true
      stored_customer_salutation: { required: true }
      stored_customer_firstname:  { required: true }
      stored_customer_lastname:   { required: true }
      stored_customer_email:
        if: paymentForm(stored_customer_email_permission)
        required: true
      stored_customer_street: &SPENDE_PAYMENTVALIDATION_DONATIONRECEIPT_OR_S7
        if: paymentForm(stored_customer_donation_receipt) or purpose() == s7
        required: true
      stored_customer_street_number: *SPENDE_PAYMENTVALIDATION_DONATIONRECEIPT_OR_S7
      stored_customer_zip_code:      *SPENDE_PAYMENTVALIDATION_DONATIONRECEIPT_OR_S7
      stored_customer_city:          *SPENDE_PAYMENTVALIDATION_DONATIONRECEIPT_OR_S7
      stored_customer_country:       *SPENDE_PAYMENTVALIDATION_DONATIONRECEIPT_OR_S7

  rnwSpendeBaeume: &SPENDE_BAEUME
    <<: *SPENDE
    purposes: [ s7, s8 ]
    amounts: &SPENDE_BAEUME_AMOUNTS
      - if: purpose() == s7 || purpose() == s9
        then:
          - 9.65
          - 40.25
          - 78.50
          - 193.25
      - if: purpose() == s8 || purpose() == s10
        then:
          - 7.65
          - 38.25
          - 76.50
          - 191.25
    minimumCustomAmount: &SPENDE_BAEUME_MINIMUMCUSTOMAMOUNTS
      - { if: 'purpose() == s7 || purpose() == s9', then: [9.65] }
      - { if: 'purpose() == s8 || purpose() == s10', then: [7.65] }
    translations:
      de:
        <<: *SPENDE_TRANSLATIONS_DE
        amount_descriptions: &SPENDE_BAEUME_TRANSLATIONS_AMOUNTDESCRIPTIONS
          # s7: with paper
          - { if: 'amount() == 9.65', then: [ 1 Baum inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 40.25', then: [ 5 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 78.50', then: [ 10 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 193.25', then: [ 25 Bäume inkl. 5 Jahre Pflege ] }
          # s8: without paper
          - { if: 'amount() == 7.65', then: [ 1 Baum inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 38.25', then: [ 5 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 76.5', then: [ 10 Bäume inkl. 5 Jahre Pflege ] }
          - { if: 'amount() == 191.25', then: [ 25 Bäume inkl. 5 Jahre Pflege ] }
        blocks:
         payment_address:
           title: Adresse angeben (für Zahlung und ggf. Versand der Urkunde)

  rnwSpendeRettungsstationen:
    <<: *SPENDE
    purposes: [ s3 ]

  rnwSpendeAuswilderungen:
    <<: *SPENDE
    purposes: [ s4 ]

  rnwSpendeBaeren:
    <<: *SPENDE
    purposes: [ s5 ]

  rnwSpendeWaldschutz:
    <<: *SPENDE
    purposes: [ s6 ]

  rnwSpendeHilfspakete:
    <<: *SPENDE
    purposes: [ s11, s12 ]
    amounts: &SPENDE_BAEUME_AMOUNTS
      - if: purpose() == s11
        then:
          - 14
          - 22
          - 47
          - 62
          - 122
          - 202
      - if: purpose() == s12
        then:
          - 12
          - 20
          - 45
          - 60
          - 120
          - 200
    minimumCustomAmount: &SPENDE_BAEUME_MINIMUMCUSTOMAMOUNTS
      - { if: 'purpose() == s11', then: [14] }
      - { if: 'purpose() == s12', then: [12] }
    translations:
      de:
        <<: *SPENDE_TRANSLATIONS_DE
        amount_descriptions: &SPENDE_BAEUME_TRANSLATIONS_AMOUNTDESCRIPTIONS
          # s7: with paper
          - { if: 'amount() == 14', then:  [ Milchfläschchen ] }
          - { if: 'amount() == 22', then:  [ Gemüse- und Früchtekorb ] }
          - { if: 'amount() == 47', then:  [ Spielzeug ] }
          - { if: 'amount() == 62', then:  [ Schubkarren ] }
          - { if: 'amount() == 122', then: [ Versorgung Auswilderung ] }
          - { if: 'amount() == 202', then: [ Medikamente ] }
          # s8: without paper
          - { if: 'amount() == 12', then:  [ Milchfläschchen ] }
          - { if: 'amount() == 20', then:  [ Gemüse- und Früchtekorb ] }
          - { if: 'amount() == 45', then:  [ Spielzeug ] }
          - { if: 'amount() == 60', then:  [ Schubkarren ] }
          - { if: 'amount() == 120', then: [ Versorgung Auswilderung ] }
          - { if: 'amount() == 200', then: [ Medikamente ] }

  rnwSpendeFoerdermitglied:
    <<: *SPENDE
    purposes: [ s13 ]
    amounts:
      - 60
      - 120
      - 300
    paymentTypes: [ recurring ]
    recurringIntervals: [ yearly ]
    allowCustomAmount: false
    translations:
      de:
        <<: *SPENDE_TRANSLATIONS_DE
        amount_descriptions: &SPENDE_BAEUME_TRANSLATIONS_AMOUNTDESCRIPTIONS
          - { if: 'amount() == 60', then:  [ Einzelperson ] }
          - { if: 'amount() == 120', then:  [ Familie ] }
          - { if: 'amount() == 300', then:  [ Juristische Person ] }
        payment_form:
          supscription_cancelation_policy: >-
            Ihr Mitgliedsbeitrag wird jährlich fällig. Sie können Ihre Mitgliedschaft jederzeit beenden.
    slots:
      payment_types_end:
        - component: content
          formName: payment_form
          text_html: payment_form.supscription_cancelation_policy

  # ------------------------------ Teil II - Patenschaften

  rnwPatenschaftAllgemein: &PATENSCHAFT
    <<: *SPENDE
    paymentWidgetBlocks:
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
    purposes: [ p1, p2, p3, p4, p5, p6 ]
    recurringIntervals:
      - monthly
      - yearly
    amounts:
      - { if: 'paymentType() == onetime', then: [300, 180] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25, 15] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300, 180] }
    minimumCustomAmount:
      - { if: 'paymentType() == onetime', then: [300] }
      - { if: 'paymentType() == recurring and recurringInterval() == monthly', then: [25] }
      - { if: 'paymentType() == recurring and recurringInterval() == yearly', then: [300] }
    # hide it here, but add it in blocks at a different location
    showStoredCustomerDonationReceipt: false
    slots: &PATENSCHAFT_SLOTS
      <<: *SPENDE_SLOTS
      # add the donation receipt field to the end of the address form
      address_form_end:
        - component: field
          type: checkbox
          name: stored_customer_donation_receipt
          text: payment_form.stored_customer_donation_receipt
          formName: paymentFrom
          value: receipt
    translations:
      de: &PATENSCHAFT_TRANSLATIONS_DE
        <<: *SPENDE_TRANSLATIONS_DE
        amount_descriptions:
          - if: 'paymentType() == recurring and recurringInterval() == monthly and amount() == 25'
            then: [ Normalpreis ]
          - if: 'amount() == 300'
            then: [ Normalpreis ]
          - if: 'amount() == custom_amount'
            then: [ '' ]
          - Ermässigt für Kinder
        payment_form:
          <<: *SPENDE_TRANSLATIONS_PAYMENT_FORM
          stored_customer_delivery: Versand
          stored_customer_deliverys:
            customer: Versand an mich
            recipient: Versand an beschenkte Person
          stored_recipient_salutation_label: Anrede
          #salutations:
          #  neutral: Divers
        blocks: &PATENSCHAFT_TRANSLATIONS_BLOCKS
          payment_profile:
            title: Personalien angeben (für Patenurkunde und -update)
          payment_address:
            title: Adresse angeben (für den Versand der Patenurkunde)
        payment_submit:
          submit: Patenschaftsbeitrag sicher übermitteln
    paymentValidations: &PATENSCHAFT_PAYMENTVALIDATIONS
      <<: *SPENDE_PAYMENTVALIDATIONS
      stored_customer_street: { required: true }
      stored_customer_street_number: { required: true }
      stored_customer_zip_code: { required: true }
      stored_customer_city: { required: true }
      stored_customer_country: { required: true }

  rnwPatenschaftRettungsstationen:
    <<: *PATENSCHAFT
    purposes: [ p1 ]

  rnwPatenschaftTopan:
    <<: *PATENSCHAFT
    purposes: [ p2 ]

  rnwPatenschaftBumi:
    <<: *PATENSCHAFT
    purposes: [ p3 ]

  rnwPatenschaftDavi:
    <<: *PATENSCHAFT
    purposes: [ p4 ]

  rnwPatenschaftKopral:
    <<: *PATENSCHAFT
    purposes: [ p5 ]

  rnwPatenschaftShelton:
    <<: *PATENSCHAFT
    purposes: [ p6 ]

  # ------------------------------ Teil III - Schenken

  rnwSchenkenPatenschaftAllgemein: &PATENSCHAFT_SCHENKEN
    <<: *PATENSCHAFT
    paymentWidgetBlocks: &PATENSCHAFT_SCHENKEN_PAYMENTWIDGETBLOCKS
      - payment_purposes
      - payment_amounts_and_intervals
      - payment_payment_methods
      - payment_profile
      - payment_address
      - slot_1
      - if: paymentForm(stored_customer_delivery) == recipient
        then: slot_2
    # gifts cannot be recurring
    paymentTypes: [ onetime ]
    paymentFormPrefill:
      <<: *SPENDE_PAYMENTFORMPREFILL
      stored_recipient_salutation: null
      stored_recipient_firstname: null
      stored_recipient_lastname: null
      stored_recipient_email: null
      stored_recipient_street: null
      stored_recipient_street_number: null
      stored_recipient_zip_code: null
      stored_recipient_city: null
      stored_recipient_country: null
      stored_customer_delivery: null
      stored_customer_delivery_to_customer: null
      stored_recipient_salutation_text: null
      stored_sxt_communication_keywords: 1888278
    translations:
      de: &PATENSCHAFT_SCHENKEN_TRANSLATIONS_DE
        <<: *PATENSCHAFT_TRANSLATIONS_DE
        blocks:
          <<: *PATENSCHAFT_TRANSLATIONS_BLOCKS
          payment_amounts_and_intervals:
            title: Betrag der Spende wählen
          payment_profile:
            title: Personalien der schenkenden Person (für Zahlung, Rückfragen und Updates)
          payment_address:
            title: Adresse der schenkenden Person (für Zahlung)
          slot_1:
            title: Versand der Urkunde
          slot_2:
            title: Adresse der beschenkten Person
        validation_errors:
          stored_customer_delivery:       { field_is_missing: Bitte eine Option wählen }
          stored_recipient_salutation:    { field_is_missing: Bitte Anrede auswählen }
          stored_recipient_firstname:     { field_is_missing: Bitte Vorname angeben }
          stored_recipient_lastname:      { field_is_missing: Bitte Nachname angeben }
          stored_recipient_email:         { field_is_missing: Bitte Emailadresse angeben }
          stored_recipient_street:        { field_is_missing: Bitte Strasse angeben }
          stored_recipient_street_number: { field_is_missing: Bitte Hausnummer angeben }
          stored_recipient_zip_code:      { field_is_missing: Bitte Postleitzahl angeben }
          stored_recipient_city:          { field_is_missing: Bitte Ort angeben }
          stored_recipient_country:       { field_is_missing: Bitte Land auswählen }
    slots: &PATENSCHAFT_SCHENKEN_SLOTS
      <<: *PATENSCHAFT_SLOTS
      slot_1:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_1.title
            - component: block_content
              children:
                - component: field
                  type: radio-group
                  inline: true
                  name: stored_customer_delivery
                  label: payment_form.stored_customer_delivery
                  formName: payment_form
                  children:
                    - component: field
                      type: radio-in-group
                      name: stored_customer_delivery
                      text: payment_form.stored_customer_deliverys.customer
                      value: customer
                    - component: field
                      type: radio-in-group
                      name: stored_customer_delivery
                      text: payment_form.stored_customer_deliverys.recipient
                      value: recipient
      slot_2:
        - component: block
          children:
            - component: block_header
              title: blocks.slot_2.title
            - component: block_content
              children:
                - component: field
                  type: select
                  formName: payment_form
                  name: stored_recipient_salutation
                  label: payment_form.stored_recipient_salutation_label
                  placeholder: payment_form.stored_recipient_salutation_placeholder
                  options:
                    - value: mr
                      label: payment_form.salutations.mr
                    - value: ms
                      label: payment_form.salutations.ms
                    - value: neutral
                      label: payment_form.salutations.neutral
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_firstname
                  label: payment_form.stored_customer_firstname
                  placeholder: payment_form.stored_customer_firstname
                  infoToggleTitle: "asdf"
                  infoToggleTextHTML: >-
                    ajshdkasjhd
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_lastname
                  label: payment_form.stored_customer_lastname
                  placeholder: payment_form.stored_customer_lastname
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_email
                  label: payment_form.stored_customer_email
                  placeholder: payment_form.stored_customer_email
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street
                  label: payment_form.stored_customer_street
                  placeholder: payment_form.stored_customer_street
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street_number
                  label: payment_form.stored_customer_street_number
                  placeholder: payment_form.stored_customer_street_number
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_street2
                  label: payment_form.stored_customer_street2
                  placeholder: payment_form.stored_customer_street2
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_zip_code
                  label: payment_form.stored_customer_zip_code
                  placeholder: payment_form.stored_customer_zip_code
                - component: field
                  type: text
                  formName: payment_form
                  name: stored_recipient_city
                  label: payment_form.stored_customer_city
                  placeholder: payment_form.stored_customer_city
                - component: field
                  type: select
                  formName: payment_form
                  name: stored_recipient_country
                  label: payment_form.stored_customer_country
                  placeholder: payment_form.stored_customer_country
                  options: null
    paymentValidations:
      <<: *PATENSCHAFT_PAYMENTVALIDATIONS
      # TODO: why does this not work
      stored_customer_email: { required: true }
      stored_customer_delivery: { required: true }
      stored_recipient_salutation: &PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
        if: paymentForm(stored_customer_delivery) == recipient
        required: true
      stored_recipient_firstname:     *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
      stored_recipient_lastname:      *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
      stored_recipient_street:        *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
      stored_recipient_street_number: *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
      stored_recipient_zip_code:      *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
      stored_recipient_city:          *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT
      stored_recipient_country:       *PATENSCHAFT_PAYMENTVALIDATION_RECIPIENT

  rnwSchenkenPatenschaftRettungsstationen:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ p1 ]

  rnwSchenkenPatenschaftTopan:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ p2 ]

  rnwSchenkenPatenschaftBumi:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ p3 ]

  rnwSchenkenPatenschaftDavi:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ p4 ]

  rnwSchenkenPatenschaftKopral:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ p5 ]

  rnwSchenkenPatenschaftShelton:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ p6 ]

  # ------------------------------ Teil IV - Bäume schenken

  rnwSchenkenBaeume:
    <<: *PATENSCHAFT_SCHENKEN
    purposes: [ s9, s10 ]
    amounts: *SPENDE_BAEUME_AMOUNTS
    minimumCustomAmount: *SPENDE_BAEUME_MINIMUMCUSTOMAMOUNTS
    translations:
      de:
        <<: *PATENSCHAFT_SCHENKEN_TRANSLATIONS_DE
        amount_descriptions: *SPENDE_BAEUME_TRANSLATIONS_AMOUNTDESCRIPTIONS

    # stored_customer_email
    # if: purpose() == s10, then: required: true

# Goodbye and good night. EOF
