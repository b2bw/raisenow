// -*- mode: js -*-

// define tamaro widgets
const RNW = <%= forms %>;

const MAPPING = {
  stored_sf_Opportunity_DonationSubject__c: 'stored_customer_subject',
  stored_sf_Opportunity_Cert__c: 'stored_customer_certificate',
  stored_sf_npe03__Recurring_Donation__c_Cert__c: 'stored_customer_certificate',
  stored_sf_Opportunity_RecipientSalutation__c: 'stored_recipient_salutation',
  stored_sf_Opportunity_RecipientFirstname__c: 'stored_recipient_firstname',
  stored_sf_Opportunity_RecipientLastname__c: 'stored_recipient_lastname',
  stored_sf_Opportunity_RecipientEmail__c: 'stored_recipient_email',
  stored_sf_Opportunity_RecipientStreet__c: (form) => {
    const result = [form.stored_recipient_street,
                    form.stored_recipient_street_number].filter(x => x).join(' ');
    result.length > 0 ? result : null;
  },
  stored_sf_Opportunity_RecipientStreet2__c: 'stored_recipient_street2',
  stored_sf_Opportunity_RecipientZipCode__c: 'stored_recipient_zip_code',
  stored_sf_Opportunity_RecipientCity__c: 'stored_recipient_city',
  stored_sf_Opportunity_RecipientCountry__c: 'stored_recipient_country',
  stored_sf_Opportunity_PresentDelivery__c: 'stored_customer_delivery',
  stored_sf_Opportunity_RecipientBirthdate__c: 'stored_recipient_birthdate'
};

const beforePaymentValidateAndSendHandler = (event) => {
  // console.log("beforePaymentValidateAndSendHandler");
  const api = event.data.api;
  const form = api.paymentForm.data;
  Object.keys(MAPPING).forEach(key => {
    const type = typeof MAPPING[key];
    var value = null;
    switch (type) {
    case 'string':
      value = form[MAPPING[key]];
      break;
    case 'function':
      value = MAPPING[key].call(null, form);
      break;
    default:
      console.error(`Unhandled type '${type}' for key '${key}'`);
    }
    if (value) form[key] = value;
  });
  // console.log("beforePaymentValidateAndSendHandler done");
}

const beforePaymentSendHandler = (event) => {
  // console.log("beforePaymentSendHandler");
  const api = event.data.api;
  const form = api.paymentForm.data;
  if (form.purpose == 's11') {
    if (form.amount_position == 1) form.stored_campaign_id = '70109000000199VAAQ';
    if (form.amount_position == 2) form.stored_campaign_id = '70109000000199aAAA';
  }
}

const beforeRenderHandler = (event) => {
  // console.log("beforeRenderHandler");
  const api = event.data.api;
  window.api = api;
  const form = api.paymentForm.data;
  window.form = form;

  const countries = window.rnw.tamaro.toJS(api.computedConfig.countries);
  const countriesOptions = countries.map(function (countryCode) {
    return {
      value: countryCode,
      label: 'countries.' + countryCode,
    };
  });

  // HACK: if the structure changes this will break
  api.config.slots.slot_3 &&
    (api.config.slots.slot_3[0].children[1].children[6].options = countriesOptions);
}

// stf stuff ------------------------------------------------------------

console.log("VERSION:", 19)

function stfDonate(details) {
  const selector = '.brxe-popup-481 .brx-popup-content'
  const content = "<h1>Bitte geben Sie Ihre Spendendaten ein</h1><div id='dynForm'>"
  $(selector).html(content)
  $.extend(true, RNW["rnwSaveTheForest"], {amounts: [details.amount],
                                           paymentFormPrefill: {
                                             stored_recipient_lastname: JSON.stringify(details)},
                                           translations: {
                                             de: {
                                               amount_descriptions: details.description}}})
  window.rnw.tamaro.runWidget("#dynForm", RNW["rnwSaveTheForest"])
  location.hash = 'popup'
  bricksOpenPopup(481)
}

const comments = "/wp-json/wp/v2/comments"

function stfLoadEntries() {
  return $.map($.ajax({url: comments + '?post=572', async: false}).responseJSON, function(e, i) {
    return JSON.parse($(e.content.rendered).text())
  })
}

function stfStoreEntry(item, f) {
  $.post({url: comments,
          data: JSON.stringify({post: 572,
                                content: JSON.stringify(item)}),
          success: f,
          error: function(xhr, status, error) {
            console.log(xhr)
            console.log(status)
            console.log(error)
          }})
}

function paymentCompleteHandler(event) {
  var widget = event.data.api
  if (widget.transactionInfo.epayment_status === 'success') {
    try {
      var payload = JSON.parse(widget.paymentForm.data.stored_recipient_lastname)
      payload.name = widget.paymentForm.data.stored_customer_map_label
      stfStoreEntry(payload, function(data, status, xhr) {
        window.location = 'https://save-the-forest.ch/danke/'
      })
    } catch (error) {
      // silently fail for all forms but rnwSaveTheForest
    }
  }
}

// reopen popup after post payment redirect
$(() => {
  if (location.hash === "#popup") {
    stfDonate({})
  }
})

// end stf stuff ------------------------------------------------------------

// on dom ready
$(() => {
  //console.log("onDocumentReady");

  // subscribe events before initializing widgets
  window.rnw.tamaro.events.beforePaymentValidateAndSend.subscribe(beforePaymentValidateAndSendHandler);
  window.rnw.tamaro.events.beforePaymentSend.subscribe(beforePaymentSendHandler);
  window.rnw.tamaro.events.beforeRender.subscribe(beforeRenderHandler);
  window.rnw.tamaro.events.paymentComplete.subscribe(paymentCompleteHandler)

  // initialize the widgets
  Object.keys(RNW).forEach(key => {
    const selector = '#'+key;
    if ($(selector).length) window.rnw.tamaro.runWidget(selector, RNW[key]);
  });

  // TODO: RaiseNow has an api to set options via query paramater, no need to reinvent the wheel
  // const json = window.location.hash.match(/#rn(.+)/)[1];
  // if (json) {
  //   const details = JSON.parse(json);
  //   console.log(details);
  //   // rnw.tamaro.instance.paymentForm.
  // }

});
